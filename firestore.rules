rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ====================
    // HELPER FUNCTIONS
    // ====================
    
    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if user is admin (safe version that handles missing documents)
    function isAdmin() {
      return isAuthenticated() && 
             (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
              get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // ====================
    // USER DOCUMENTS
    // ====================
    
    match /users/{userId} {
      // Users can read their own profile, admins can read all
      allow read: if isOwner(userId) || isAdmin();
      
      // Users can create their own profile during signup
      allow create: if isOwner(userId) || isAdmin();
      
      // Users can update their own profile, admins can update any
      allow update: if isOwner(userId) || isAdmin();
      
      // Only admins can delete users
      allow delete: if isAdmin();
    }
    
    // ====================
    // PROJECT DOCUMENTS
    // ====================
    
    match /projects/{projectId} {
      // Authenticated users can read projects
      allow read: if isAuthenticated();
      
      // Authenticated users can create projects
      allow create: if isAuthenticated();
      
      // Authenticated users can update projects
      allow update: if isAuthenticated();
      
      // Only admins can delete projects
      allow delete: if isAdmin();
    }
    
    // ====================
    // WORKER DOCUMENTS
    // ====================
    
    match /workers/{workerId} {
      // Authenticated users can read workers
      allow read: if isAuthenticated();
      
      // Authenticated users can create worker profiles
      allow create: if isAuthenticated();
      
      // Authenticated users can update workers
      allow update: if isAuthenticated();
      
      // Only admins can delete workers
      allow delete: if isAdmin();
    }
    
    // ====================
    // WORK SESSIONS
    // ====================
    
    match /work-sessions/{sessionId} {
      // Authenticated users can read work sessions
      allow read: if isAuthenticated();
      
      // Authenticated users can create work sessions
      allow create: if isAuthenticated();
      
      // Authenticated users can update work sessions
      allow update: if isAuthenticated();
      
      // Authenticated users can delete work sessions
      allow delete: if isAuthenticated();
    }
    
    // ====================
    // NOTIFICATIONS
    // ====================
    
    match /notifications/{notificationId} {
      // Authenticated users can read notifications
      allow read: if isAuthenticated();
      
      // Authenticated users can create notifications
      allow create: if isAuthenticated();
      
      // Authenticated users can update notifications
      allow update: if isAuthenticated();
      
      // Authenticated users can delete notifications
      allow delete: if isAuthenticated();
    }
    
    // ====================
    // PROJECT TEMPLATES
    // ====================
    
    match /projectTemplates/{templateId} {
      // Authenticated users can read templates
      allow read: if isAuthenticated();
      
      // Authenticated users can create templates
      allow create: if isAuthenticated();
      
      // Authenticated users can update templates
      allow update: if isAuthenticated();
      
      // Only admins can delete templates
      allow delete: if isAdmin();
    }
    
    // ====================
    // USER PREFERENCES
    // ====================
    
    match /userPreferences/{userId} {
      // Users can read/write their own preferences
      allow read, write: if isOwner(userId) || isAdmin();
    }
    
    // ====================
    // ALLOW ALL OTHER AUTHENTICATED ACCESS
    // ====================
    
    // Allow authenticated users to access other collections
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
}